local{
    #Config for local system
    NGSGraphDir = "./input/"
    originalGraphFileName = "Graph200.txt"
    perturbedGraphFileName = "Graph200.txt.perturbed"
    goldenYamlFileName = "Graph200.ngs.yaml"
    statisticsOutputFileName = "MitM-statistics.yaml"
    inputDir = "./input"
    outputDir = "./output"
    masterURL = "local"
    master = "local"
}
hdfs{
    #Config for hdfs localhost
    NGSGraphDir = "hdfs://localhost:9000/spark/Graph/"
    originalGraphFileName = "Graph50.txt"
    perturbedGraphFileName = "Graph50.perturbed.txt"
    goldenYamlFileName = "Graph200.ngs.yaml"
    statisticsOutputFileName = "MitM-statistics.yaml"
    inputDir = "hdfs://localhost:9000/input/"
    outputDir = "./output/"
    masterURL = "hdfs://localhost:9000"
    master = "local"
}
aws{
    #Config for amazon s3
    NGSGraphDir = "s3://mitm-statistics-simulator/Graph/"
    originalGraphFileName = "Graph200.txt"
    perturbedGraphFileName = "Graph200.txt.perturbed"
    goldenYamlFileName = "Graph200.ngs.yaml"
    statisticsOutputFileName = "MitM-statistics.yaml"
    inputDir = "s3://mitm-statistics-simulator/input/"
    outputDir = "s3://mitm-statistics-simulator/output/"
    masterURL = "s3://mitm-statistics-simulator"
    master = "local"
}

MitMStatSimVars{
    randomWalkCoeff = 0.5d  #decides what fraction of nodes to traverse in 1 random walk on a graph (recommended = max length path)
    numOfParallelWalks = 20 #decides number of partitions- each assigned a starting node
    numItersPerCompNode = 50 #decides total random walks to be run per partition
    itersBeforeAccum = 10 #decides number of iterations to run in every partition before accumulating results and letting other partitions know
    nodeMatchThreshold = 0.1d
}

